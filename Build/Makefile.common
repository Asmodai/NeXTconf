#
# Common makefile
#

NAME = nextconf

PROJECTVERSION = 0.1
PROJECT_TYPE = Tool
LANGUAGE = English

HFILES = Architecture.h    \
	 FileSystem.h      \
	 Header.h          \
	 MakeFile.h        \
	 Scanner.h         \
	 Constants.h       \
	 List+Debug.h      \
	 PropertyManager.h \
	 Number.h          \
	 Boolean.h         \
	 Object+Debug.h    \
	 Parser.h          \
	 Platform.h        \
	 Pointer.h         \
	 Selector.h        \
	 Property.h        \
	 Stack.h           \
	 String.h          \
	 Symbol.h          \
	 SymbolTable.h     \
	 SyntaxTree.h      \
	 IntInstr.h        \
	 VirtMachine.h     \
	 Utils.h           \
	 Version.h         \
	 ExtErrno.h        \
	 version.h

CFILES = Utils.c           \
	 Types.h

CLASSES = Architecture.m    \
	  FileSystem.m      \
	  Header.m          \
	  MakeFile.m        \
	  Scanner.m         \
	  Constants.m       \
	  List+Debug.m      \
	  Main.m            \
	  PropertyManager.m \
	  Number.m          \
	  Boolean.m         \
	  Object+Debug.m    \
	  Parser.m          \
	  Platform.m        \
	  Pointer.m         \
	  Selector.m        \
	  Property.m        \
	  Stack.m           \
	  String.m          \
	  Symbol.m          \
	  SymbolTable.m     \
	  SyntaxTree.m      \
	  IntInstr.m        \
	  VirtMachine.m     \
	  Version.m

OTHERSRCS = Makefile.preamble Makefile Makefile.postamble

-include Build/NeXTconf.version

default: all

distclean: clean
	@echo "************ Cleaning for distribution ************"
	@(rm -f *.o .otool.out; )
	find ./ -name .dir3_0.wmd -print | xargs rm -f
	find ./ -name ".nfs*" -print | xargs rm -f
	find ./ -name "*~" -print | xargs rm -f
	@rm -f .prepped *.tar *.tar.gz *.tar.Z

dist:
	@echo "************ Making a new distribution ************"
	echo $(PROJECTNAME).$(PRODUCTVERSION).s > .fname
	mkdir `cat .fname`
	@for f in * ; do \
		if [ $$f = `cat .fname` ] ; then continue ; fi ; \
		ln -s `pwd`/$$f `cat .fname` ;\
	done ;
	tar chf `cat .fname`.tar `cat .fname`
	@rm -rf `cat .fname` .fname

package:
	@echo "************ Generating a NeXT package ************"
	FAKEROOT=`pwd`/Package/FakeRoot make install ;
	(cd Package ; ./build $(PROJECTNAME) $(PRODUCTVERSION)) ;
	echo $(PROJECTNAME).$(PRODUCTVERSION).b > .fname
	mkdir `cat .fname`
	@ln -s `pwd`/Package/$(NAME)/$(NAME).pkg `cat .fname`
	tar chf `cat .fname`.tar `cat .fname`
	@rm -rf `cat .fname` .fname
	@rm -rf Package/$(NAME)
